{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A minimal CI/CD setup for Python projects This is my personal playground for trying out CI/CD ideas.","title":"Home"},{"location":"#a-minimal-cicd-setup-for-python-projects","text":"This is my personal playground for trying out CI/CD ideas.","title":"A minimal CI/CD setup for Python projects"},{"location":"analysis/","text":"xyz.analysis.exploratory_analysis Module for exploratory data analysis. Functions sum_all ( df ) Sum all values in the dataframe df. Parameters: Name Type Description Default df DataFrame a Pandas dataframe required Returns: Type Description float A numerical value Source code in xyz/analysis/exploratory_analysis.py def sum_all ( df : pd . DataFrame ) -> float : \"\"\"Sum all values in the dataframe df. args: df: a Pandas dataframe returns: A numerical value \"\"\" vals = df . values return vals . sum () sum_all_default_dataset () Read the default dataset, and then calculate sum. Source code in xyz/analysis/exploratory_analysis.py def sum_all_default_dataset (): \"\"\"Read the default dataset, and then calculate sum.\"\"\" df = data_utils . read_data () return sum_all ( df )","title":"Analysis"},{"location":"analysis/#xyz.analysis.exploratory_analysis","text":"Module for exploratory data analysis.","title":"exploratory_analysis"},{"location":"analysis/#xyz.analysis.exploratory_analysis-functions","text":"","title":"Functions"},{"location":"analysis/#xyz.analysis.exploratory_analysis.sum_all","text":"Sum all values in the dataframe df. Parameters: Name Type Description Default df DataFrame a Pandas dataframe required Returns: Type Description float A numerical value Source code in xyz/analysis/exploratory_analysis.py def sum_all ( df : pd . DataFrame ) -> float : \"\"\"Sum all values in the dataframe df. args: df: a Pandas dataframe returns: A numerical value \"\"\" vals = df . values return vals . sum ()","title":"sum_all()"},{"location":"analysis/#xyz.analysis.exploratory_analysis.sum_all_default_dataset","text":"Read the default dataset, and then calculate sum. Source code in xyz/analysis/exploratory_analysis.py def sum_all_default_dataset (): \"\"\"Read the default dataset, and then calculate sum.\"\"\" df = data_utils . read_data () return sum_all ( df )","title":"sum_all_default_dataset()"},{"location":"installation/","text":"Installation Some Instructions here","title":"Installation"},{"location":"installation/#installation","text":"Some Instructions here","title":"Installation"},{"location":"notes/","text":"Some notes Notes about the tools used","title":"Notes"},{"location":"notes/#some-notes","text":"Notes about the tools used","title":"Some notes"},{"location":"preprocessing/","text":"xyz.preprocessing.data_utils Some basic utilties for working with data. Functions read_data ( filename = None ) Read a sample data file. If a filename is supplied, read the csv file into a dataframe. If not, return a demo dataset. I use pkgutil.get_data() to specify the location of the datafile inside the package. get_data() returns a stream. io.BytesIO() is needed to send it fo pandas. Source code in xyz/preprocessing/data_utils.py def read_data ( filename = None ): \"\"\"Read a sample data file. If a filename is supplied, read the csv file into a dataframe. If not, return a demo dataset. I use pkgutil.get_data() to specify the location of the datafile inside the package. get_data() returns a stream. io.BytesIO() is needed to send it fo pandas. \"\"\" if filename is None : data_stream = pkgutil . get_data ( 'xyz' , 'data/sample_data.csv' ) data = pd . read_csv ( io . BytesIO ( data_stream ), encoding = 'utf8' , sep = ',' ) else : data = pd . read_csv ( filename , sep = ',' ) return data","title":"Preprocessing"},{"location":"preprocessing/#xyz.preprocessing.data_utils","text":"Some basic utilties for working with data.","title":"data_utils"},{"location":"preprocessing/#xyz.preprocessing.data_utils-functions","text":"","title":"Functions"},{"location":"preprocessing/#xyz.preprocessing.data_utils.read_data","text":"Read a sample data file. If a filename is supplied, read the csv file into a dataframe. If not, return a demo dataset. I use pkgutil.get_data() to specify the location of the datafile inside the package. get_data() returns a stream. io.BytesIO() is needed to send it fo pandas. Source code in xyz/preprocessing/data_utils.py def read_data ( filename = None ): \"\"\"Read a sample data file. If a filename is supplied, read the csv file into a dataframe. If not, return a demo dataset. I use pkgutil.get_data() to specify the location of the datafile inside the package. get_data() returns a stream. io.BytesIO() is needed to send it fo pandas. \"\"\" if filename is None : data_stream = pkgutil . get_data ( 'xyz' , 'data/sample_data.csv' ) data = pd . read_csv ( io . BytesIO ( data_stream ), encoding = 'utf8' , sep = ',' ) else : data = pd . read_csv ( filename , sep = ',' ) return data","title":"read_data()"}]}